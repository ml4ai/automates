vars: org/clulab/aske_automates/grammars/vars.yml

rules:

####VARIABLES####
  - name: var-duck-rule
    label: Variable
    priority: ${priority}
    type: token
    example: ""
    action: looksLikeAVariable
    pattern: |
      (?<! equation) [mention=Concept]

  - name: var-noun_of
    label: Variable
    priority: ${priority}
    type: token
    example: "DSSAT-CSM employs the following formula for calculation of E0 (potential crop ET):"
    pattern: |
      (?<=calculation of|value of) (@Concept [word = /.*/])

  - name: var-calculation
    label: Variable
    priority: ${priority}
    type: token
    action: variableArguments
    example: "The ESo calculation in equation 4 is implemented for the CSM-CERESMaize model and several other crop models."
    pattern: |
      (?<variable> [word = /.*/]) calculation

  - name: var_versus
    label: Variable
    priority: ${priority}
    type: token
    example: "SKc is a shaping parameter that determines the shape of the Kcd versus LAI curve."
    pattern: |
        @Concept (?= versus [] /curve|plot/)

  - name: var_in_equation
    label: Variable
    priority: ${priority}
    type: token
    example: "Note that Kcdmax in equation 5 is different from Kcmax in equation A6."
    pattern: |
      (@Concept [word = /.*/]) (?= in equation)

  - name: var_equals
    label: Variable
    priority: ${priority}
    type: token
    action: variableArguments
    example: "T = daily mean air temperature [Â°C]"
    pattern: |
      @variable:Concept (?= "=")


  - name: var_where-dep
    label: Variable
    priority: ${priority}
    type: dependency
    action: variableArguments
    example: "where Kcdmin is the minimum crop coefficient or Kcd at LAI = 0, Kcdmax is the maximum crop coefficient at high LAI, and SKc is a shaping parameter that determines the shape of the Kcd versus LAI curve."
    pattern: |
      trigger = [lemma = "where"]
      variable:Concept+ = </advmod|advcl/+ conj_and? (nsubj|nsubjpass)

  - name: var_and
    label: Variable
    priority: ${priority}
    type: token
    action: variableArguments
    example: "E0 is calculated as the product of Kcd and ETpm."
    pattern: |
      (?<=product of|values for) @variable:Concept and @variable:Concept

  - name: var_dssat_model
    label: Variable # should this be a Model instead?
    priority: ${priority}
    type: token
    example: ""
    pattern: |
      [word=/^DSSAT|^CSM/]

