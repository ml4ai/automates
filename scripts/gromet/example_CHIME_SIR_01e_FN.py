from gromet import *  # never do this :)


# -----------------------------------------------------------------------------
# GroMEt instance
# -----------------------------------------------------------------------------

def generate_gromet() -> Gromet:
    # ----- Metadata -----

    chime_model_description = \
        ModelDescription(uid=UidMetadatum('chime_model_description'),
                         provenance=Provenance(method=MetadatumMethod('Manual_claytonm@az'),
                                               timestamp=get_current_datetime()),
                         name='CHIME v01d [SIR dynamics + loop_1_1 + loop_1 + sim_sir]',
                         description='The CHIME (COVID-19 Hospital Impact Model for Epidemics) App '
                                     'is designed to assist hospitals and public health officials '
                                     'understand hospital capacity needs as they relate to the '
                                     'COVID-19 pandemic. CHIME enables capacity planning by providing '
                                     'estimates of total daily (i.e. new) and running totals of '
                                     '(i.e. census) inpatient hospitalizations, ICU admissions, and '
                                     'patients requiring ventilation. These estimates are generated '
                                     'using a SIR (Susceptible, Infected, Recovered) model, a standard '
                                     'epidemiological modeling technique.')

    chime_model_interface = \
        ModelInterface(uid=UidMetadatum("chime_model_interface"),
                       provenance=Provenance(method=MetadatumMethod('Manual_claytonm@az'),
                                             timestamp=get_current_datetime()),
                       variables=[UidVariable("V:sir.s_in"),
                                  UidVariable("V:sir.s_out"),
                                  UidVariable("V:sir.i_in"),
                                  UidVariable("V:sir.i_out"),
                                  UidVariable("V:sir.r_in"),
                                  UidVariable("V:sir.r_out")],  # todo update
                       parameters=[UidVariable("V:sir.n"),
                                   UidVariable("V:sir.beta"),
                                   UidVariable("V:sir.gamma")],  # todo update
                       initial_conditions=[UidVariable("V:sir.s_in"),
                                           UidVariable("V:sir.i_in"),
                                           UidVariable("V:sir.r_in")]  # todo update
                       )

    # ----- Model component definitions -----

    variables_sir = [
        # sir input
        Variable(uid=UidVariable("V:sir.n"),
                 name="n", type=UidType("Integer"),
                 proxy_state=UidPort("P:sir.n"),
                 states=[UidPort("P:sir.n"),
                         UidWire("W:sir.n>sir_scale_exp.n"),
                         UidPort("P:sir_scale_exp.n")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.beta"),
                 name="beta", type=UidType("Float"),
                 proxy_state=UidPort("P:sir.beta"),
                 states=[UidPort("P:sir.beta"),
                         UidWire("W:sir.beta>sir_s_n_exp.beta"),
                         UidPort("P:sir_s_n_exp.beta"),
                         UidWire("W:sir.beta>sir_i_n_exp.beta"),
                         UidPort("P:sir_i_n_exp.beta")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.gamma"),
                 name="gamma", type=UidType("Float"),
                 proxy_state=UidPort("P:sir.gamma"),
                 states=[UidPort("P:sir.gamma"),
                         UidWire("W:sir.gamma>sir_i_n_exp.gamma"),
                         UidPort("P:sir_i_n_exp.gamma"),
                         UidWire("W:sir.gamma>sir_r_n_exp.gamma"),
                         UidPort("P:sir_r_n_exp.gamma")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.s_in"),
                 name="s", type=UidType("Float"),
                 proxy_state=UidPort("P:sir.s_in"),
                 states=[UidPort("P:sir.s_in"),
                         UidWire("W:sir.s_in>sir_s_n_exp.s"),
                         UidPort("P:sir_s_n_exp.s"),
                         UidWire("W:sir.s_in>sir_i_n_exp.s"),
                         UidPort("P:sir_i_n_exp.s")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.i_in"),
                 name="i", type=UidType("Float"),
                 proxy_state=UidPort("P:sir.i_in"),
                 states=[UidPort("P:sir.i_in"),
                         UidWire("W:sir.i_in>sir_s_n_exp.i"),
                         UidPort("P:sir_s_n_exp.i"),
                         UidWire("W:sir.i_in>sir_i_n_exp.i"),
                         UidPort("P:sir_i_n_exp.i"),
                         UidWire("W:sir.i_in>sir_r_n_exp.i"),
                         UidPort("P:sir_r_n_exp.i")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.r_in"),
                 name="r", type=UidType("Float"),
                 proxy_state=UidPort("P:sir.r_in"),
                 states=[UidPort("P:sir.r_in"),
                         UidWire("W:sir.r_in>sir_r_n_exp.r"),
                         UidPort("P:sir_r_n_exp.r")],
                 metadata=None),

        # sir internal
        Variable(uid=UidVariable("V:sir.s_n"),
                 name="s_n", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_s_n_exp.s_n"),
                 states=[UidPort("P:sir_s_n_exp.s_n"),
                         UidWire("W:sir_s_n_exp.s_n>sir_scale_exp.s_n"),
                         UidPort("P:sir_scale_exp.s_n"),
                         UidWire("W:sir_s_n_exp.s_n>sir_s_exp.s_n"),
                         UidPort("P:sir_s_exp.s_n")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.i_n"),
                 name="i_n", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_i_n_exp.i_n"),
                 states=[UidPort("P:sir_i_n_exp.i_n"),
                         UidWire("W:sir_i_n_exp.i_n>sir_scale_exp.i_n"),
                         UidPort("P:sir_scale_exp.i_n"),
                         UidWire("W:sir_i_n_exp.i_n>sir_i_exp.i_n"),
                         UidPort("P:sir_i_exp.i_n")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.r_n"),
                 name="r_n", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_r_n_exp.r_n"),
                 states=[UidPort("P:sir_r_n_exp.r_n"),
                         UidWire("W:sir_r_n_exp.r_n>sir_scale_exp.r_n"),
                         UidPort("P:sir_scale_exp.r_n"),
                         UidWire("W:sir_r_n_exp.r_n>sir_r_exp.r_n"),
                         UidPort("P:sir_r_exp.r_n")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.scale"),
                 name="scale", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_scale_exp.scale"),
                 states=[UidPort("P:sir_scale_exp.scale"),
                         UidWire("W:sir_scale_exp.scale>sir_s_exp.scale"),
                         UidPort("P:sir_s_exp.scale"),
                         UidWire("W:sir_scale_exp.scale>sir_i_exp.scale"),
                         UidPort("P:sir_i_exp.scale"),
                         UidWire("W:sir_scale_exp.scale>sir_r_exp.scale"),
                         UidPort("P:sir_r_exp.scale")],
                 metadata=None),

        # sir output
        Variable(uid=UidVariable("V:sir.s_out"),
                 name="s", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_s_exp.s"),
                 states=[UidPort("P:sir_s_exp.s"),
                         UidWire("W:sir_s_exp.s>sir.s_out"),
                         UidPort("P:sir.s_out")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.i_out"),
                 name="i", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_i_exp.i"),
                 states=[UidPort("P:sir_i_exp.i"),
                         UidWire("W:sir_i_exp.i>sir.i_out"),
                         UidPort("P:sir.i_out")],
                 metadata=None),
        Variable(uid=UidVariable("V:sir.r_out"),
                 name="r", type=UidType("Float"),
                 proxy_state=UidPort("P:sir_r_exp.r"),
                 states=[UidPort("P:sir_r_exp.r"),
                         UidWire("W:sir_r_exp.r>sir.r_out"),
                         UidPort("P:sir.r_out")],
                 metadata=None)
    ]

    wires_simsir = [

        # -- sim_sir() Wires --

        Wire(uid=UidWire("W:simsir.in.N_p>simsir_loop_1_range_init_exp.in.N_p"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.N_p"),
             tgt=UidPort("P:simsir_loop_1_range_init_exp.in.N_p")),
        Wire(uid=UidWire("W:simsir_loop_1_range_init_exp.out.loop_1_seq>simsir_loop_1_get_p_idx_init_exp.in.loop_1_seq"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_range_init_exp.out.loop_1_seq"),
             tgt=UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_range_init_exp.out.loop_1_seq>simsir_loop_1.in.loop_1_seq"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_range_init_exp.out.loop_1_seq"),
             tgt=UidPort("P:simsir_loop_1.in.loop_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_get_p_idx_init_exp.out.p_idx>simsir_loop_1.in.p_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_get_p_idx_init_exp.out.p_idx"),
             tgt=UidPort("P:simsir_loop_1.in.p_idx")),
        Wire(uid=UidWire("W:simsir.loop_1_i>simsir_loop_1_get_p_idx_init_exp.in.loop_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidJunction("J:simsir.loop_1_i"),
             tgt=UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_i")),
        Wire(uid=UidWire("W:simsir.loop_1_i>simsir_loop_1.in.loop_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidJunction("J:simsir.loop_1_i"),
             tgt=UidPort("P:simsir_loop_1.in.loop_1_i")),
        Wire(uid=UidWire("W:simsir.in.days>simsir_loop_1.in.days"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.days"),
             tgt=UidPort("P:simsir_loop_1.in.days")),
        Wire(uid=UidWire("W:simsir.in.betas>simsir_loop_1.in.betas"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.betas"),
             tgt=UidPort("P:simsir_loop_1.in.betas")),
        Wire(uid=UidWire("W:simsir.in.gamma>simsir_loop_1.in.gamma"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.gamma"),
             tgt=UidPort("P:simsir_loop_1.in.gamma")),
        Wire(uid=UidWire("W:simsir.in.s>simsir_loop_1.in.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.s"),
             tgt=UidPort("P:simsir_loop_1.in.s")),
        Wire(uid=UidWire("W:simsir.in.s>simsir_n_exp.in.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.s"),
             tgt=UidPort("P:simsir_n_exp.in.s")),
        Wire(uid=UidWire("W:simsir.in.i>simsir_loop_1.in.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.i"),
             tgt=UidPort("P:simsir_loop_1.in.i")),
        Wire(uid=UidWire("W:simsir.in.i>simsir_n_exp.in.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.i"),
             tgt=UidPort("P:simsir_n_exp.in.i")),
        Wire(uid=UidWire("W:simsir.in.r>simsir_loop_1.in.r"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.r"),
             tgt=UidPort("P:simsir_loop_1.in.r")),
        Wire(uid=UidWire("W:simsir.in.r>simsir_n_exp.in.r"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir.in.r"),
             tgt=UidPort("P:simsir_n_exp.in.r")),
        Wire(uid=UidWire("W:simsir_n_exp.out.n>simsir_loop_1.in.n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_n_exp.out.n"),
             tgt=UidPort("P:simsir_loop_1.in.n")),
        Wire(uid=UidWire("W:simsir_loop_1.out.s>simsir.out.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1.out.s"),
             tgt=UidPort("P:simsir.out.s")),
        Wire(uid=UidWire("W:simsir_loop_1.out.i>simsir.out.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1.out.i"),
             tgt=UidPort("P:simsir.out.i")),
        Wire(uid=UidWire("W:simsir_loop_1.out.r>simsir.out.r"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1.out.r"),
             tgt=UidPort("P:simsir.out.r")),
    ]

    wires_simsir_loop_1 = [

        # simsir_loop_1 Wires <loop control>
        Wire(uid=UidWire("W:simsir_loop_1.in.loop_1_i>simsir_loop_1_i_exp.in.loop_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.loop_1_i"),
             tgt=UidPort("P:simsir_loop_1_i_exp.in.loop_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1.in.loop_1_seq>simsir_loop_1_get_p_idx_exp.in.loop_1_seq"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.loop_1_seq"),
             tgt=UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_i_exp.out.loop_1_i>simsir_loop_1_get_p_idx_exp.in.loop_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_i_exp.out.loop_1_i"),
             tgt=UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1_i_exp.out.loop_1_i>simsir_loop_1.out.loop_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_i_exp.out.loop_1_i"),
             tgt=UidPort("PC:simsir_loop_1.out.loop_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1_get_p_idx_exp.out.p_idx>simsir_loop_1.out.p_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_get_p_idx_exp.out.p_idx"),
             tgt=UidPort("PC:simsir_loop_1.out.p_idx")),

        # Wire simsir_loop_1 <body>

        Wire(uid=UidWire("W:simsir_loop_1.in.days>simsir_loop_1_n_days_exp.in.days"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.days"),
             tgt=UidPort("P:simsir_loop_1_n_days_exp.in.days")),
        Wire(uid=UidWire("W:simsir_loop_1_get_p_idx_exp.out.p_idx>simsir_loop_1_n_days_exp.in.p_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_get_p_idx_exp.out.p_idx"),
             tgt=UidPort("P:simsir_loop_1_n_days_exp.in.p_idx")),
        Wire(uid=UidWire("W:simsir_loop_1_n_days_exp.out.n_days>simsir_loop_1_1_range_init_exp.in.n_days"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_n_days_exp.out.n_days"),
             tgt=UidPort("P:simsir_loop_1_1_range_init_exp.in.n_days")),
        Wire(uid=UidWire("W:simsir_loop_1.in.betas>simsir_loop_1_get_beta_exp.in.betas"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.betas"),
             tgt=UidPort("P:simsir_loop_1_get_beta_exp.in.betas")),
        Wire(uid=UidWire("W:simsir_loop_1_get_p_idx_exp.out.p_idx>simsir_loop_1_get_beta_exp.in.p_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_get_p_idx_exp.out.p_idx"),
             tgt=UidPort("P:simsir_loop_1_get_beta_exp.in.p_idx")),
        Wire(uid=UidWire("W:simsir_loop_1_get_beta_exp.out.beta>simsir_loop_1_1.in.beta"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_get_beta_exp.out.beta"),
             tgt=UidPort("P:simsir_loop_1_1.in.beta")),

        # Wire simsir_loop_1 <body> passthrough

        Wire(uid=UidWire("W:simsir_loop_1.in.n>simsir_loop_1_1.in.n"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.n"),
             tgt=UidPort("P:simsir_loop_1_1.in.n")),
        Wire(uid=UidWire("W:simsir_loop_1.in.s>simsir_loop_1_1.in.s"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.s"),
             tgt=UidPort("P:simsir_loop_1_1.in.s")),
        Wire(uid=UidWire("W:simsir_loop_1.in.i>simsir_loop_1_1.in.i"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.i"),
             tgt=UidPort("P:simsir_loop_1_1.in.i")),
        Wire(uid=UidWire("W:simsir_loop_1.in.r>simsir_loop_1_1.in.r"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.r"),
             tgt=UidPort("P:simsir_loop_1_1.in.r")),
        Wire(uid=UidWire("W:simsir_loop_1.in.gamma>simsir_loop_1_1.in.gamma"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.gamma"),
             tgt=UidPort("P:simsir_loop_1_1.in.gamma")),
        Wire(uid=UidWire("W:simsir_loop_1_1.out.s>simsir_loop_1.out.s"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1.out.s"),
             tgt=UidPort("PC:simsir_loop_1.out.s")),
        Wire(uid=UidWire("W:simsir_loop_1_1.out.i>simsir_loop_1.out.i"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1.out.i"),
             tgt=UidPort("PC:simsir_loop_1.out.i")),
        Wire(uid=UidWire("W:simsir_loop_1_1.out.r>simsir_loop_1.out.r"),
             type=None,
             value_type=UidType("Real"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1.out.r"),
             tgt=UidPort("PC:simsir_loop_1.out.r")),

        # loop_1_1 init Wires <loop control>
        Wire(uid=UidWire("W:simsir_loop_1.in.p_idx>simsir_loop_1_cond.in.p_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.p_idx"),
             tgt=UidPort("P:simsir_loop_1_cond.in.p_idx")),
        Wire(uid=UidWire("W:simsir_loop_1.in.loop_1_seq>simsir_loop_1_cond.in.loop_1_seq"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1.in.loop_1_seq"),
             tgt=UidPort("P:simsir_loop_1_cond.in.loop_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_1_get_d_idx_init_exp.out.d_idx>simsir_loop_1_1.in.d_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.out.d_idx"),
             tgt=UidPort("P:simsir_loop_1_1.in.d_idx")),
        Wire(uid=UidWire("W:simsir_loop_1.loop_1_1_i>simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidJunction('J:simsir_loop_1.loop_1_1_i'),
             tgt=UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1.loop_1_1_i>simsir_loop_1_1.in.loop_1_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidJunction('J:simsir_loop_1.loop_1_1_i'),
             tgt=UidPort("P:simsir_loop_1_1.in.loop_1_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq>simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_seq"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq"),
             tgt=UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq>simsir_loop_1_1.in.loop_1_1_seq"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq"),
             tgt=UidPort("P:simsir_loop_1_1.in.loop_1_1_seq")),
    ]

    wires_simsir_loop_1_1 = [

        # loop_1_1 Wires <loop control>
        Wire(uid=UidWire("W:simsir_loop_1_1.in.d_idx>simsir_loop_1_1_cond.in.d_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.d_idx"),
             tgt=UidPort("P:simsir_loop_1_1_cond.in.d_idx")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.loop_1_1_seq>simsir_loop_1_1_cond.in.loop_1_1_seq"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.loop_1_1_seq"),
             tgt=UidPort("P:simsir_loop_1_1_cond.in.loop_1_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.loop_1_1_i>simsir_loop_1_1_i_exp.in.loop_1_1_i"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.loop_1_1_i"),
             tgt=UidPort("P:simsir_loop_1_1_i_exp.in.loop_1_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.loop_1_1_seq>simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_seq"),
             type=None,
             value_type=UidType("Sequence"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.loop_1_1_seq"),
             tgt=UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_seq")),
        Wire(uid=UidWire("W:simsir_loop_1_1_i_exp.out.loop_1_1_i>simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1_i_exp.out.loop_1_1_i"),
             tgt=UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1_1_i_exp.out.loop_1_1_i>simsir_loop_1_1.out.loop_1_1_i"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1_i_exp.out.loop_1_1_i"),
             tgt=UidPort("PC:simsir_loop_1_1.out.loop_1_1_i")),
        Wire(uid=UidWire("W:simsir_loop_1_1_get_d_idx_exp.out.d_idx>simsir_loop_1_1.out.d_idx"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1_get_d_idx_exp.out.d_idx"),
             tgt=UidPort("PC:simsir_loop_1_1.out.d_idx")),

        # loop_1_1 Wires <body>
        Wire(uid=UidWire("W:simsir_loop_1_1.in.s>simsir_loop_1_1_call_sir_exp.in.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.s"),
             tgt=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.s")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.i>simsir_loop_1_1_call_sir_exp.in.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.i"),
             tgt=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.i")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.r>simsir_loop_1_1_call_sir_exp.in.r"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.r"),
             tgt=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.r")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.gamma>simsir_loop_1_1_call_sir_exp.in.gamma"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.gamma"),
             tgt=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.gamma")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.beta>simsir_loop_1_1_call_sir_exp.in.beta"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.beta"),
             tgt=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.beta")),
        Wire(uid=UidWire("W:simsir_loop_1_1.in.n>simsir_loop_1_1_call_sir_exp.in.n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:simsir_loop_1_1.in.n"),
             tgt=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.n")),

        Wire(uid=UidWire("W:simsir_loop_1_1_call_sir_exp.out.s>simsir_loop_1_1.out.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.s"),
             tgt=UidPort("PC:simsir_loop_1_1.out.s")),
        Wire(uid=UidWire("W:simsir_loop_1_1_call_sir_exp.out.i>simsir_loop_1_1.out.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.i"),
             tgt=UidPort("PC:simsir_loop_1_1.out.i")),
        Wire(uid=UidWire("W:simsir_loop_1_1_call_sir_exp.out.r>simsir_loop_1_1.out.r"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.r"),
             tgt=UidPort("PC:simsir_loop_1_1.out.r")),

        # todo: Rewire when updating simsir
        Wire(uid=UidWire("W:simsir_loop_1_1_call_sir_exp.out.s>simsir.out.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.s"),  # UidPort("P:sir.s_out"),
             tgt=UidPort("P:simsir.out.s")),
    ]

    wires_sir = [

        # -- sir() Wires --

        # sir
        Wire(uid=UidWire("W:sir.n>sir_scale_exp.n"),
             type=None,
             value_type=UidType("Integer"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.n"),
             tgt=UidPort("P:sir_scale_exp.n")),
        Wire(uid=UidWire("W:sir.beta>sir_s_n_exp.beta"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.beta"),
             tgt=UidPort("P:sir_s_n_exp.beta")),
        Wire(uid=UidWire("W:sir.beta>sir_i_n_exp.beta"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.beta"),
             tgt=UidPort("P:sir_i_n_exp.beta")),
        Wire(uid=UidWire("W:sir.gamma>sir_i_n_exp.gamma"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.gamma"),
             tgt=UidPort("P:sir_i_n_exp.gamma")),
        Wire(uid=UidWire("W:sir.gamma>sir_r_n_exp.gamma"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.gamma"),
             tgt=UidPort("P:sir_r_n_exp.gamma")),
        Wire(uid=UidWire("W:sir.s_in>sir_s_n_exp.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.s_in"),
             tgt=UidPort("P:sir_s_n_exp.s")),
        Wire(uid=UidWire("W:sir.s_in>sir_i_n_exp.s"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.s_in"),
             tgt=UidPort("P:sir_i_n_exp.s")),
        Wire(uid=UidWire("W:sir.i_in>sir_s_n_exp.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.i_in"),
             tgt=UidPort("P:sir_s_n_exp.i")),
        Wire(uid=UidWire("W:sir.i_in>sir_i_n_exp.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.i_in"),
             tgt=UidPort("P:sir_i_n_exp.i")),
        Wire(uid=UidWire("W:sir.i_in>sir_r_n_exp.i"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.i_in"),
             tgt=UidPort("P:sir_r_n_exp.i")),
        Wire(uid=UidWire("W:sir.r_in>sir_r_n_exp.r"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir.r_in"),
             tgt=UidPort("P:sir_r_n_exp.r")),
        Wire(uid=UidWire("W:sir_s_n_exp.s_n>sir_scale_exp.s_n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_s_n_exp.s_n"),
             tgt=UidPort("P:sir_scale_exp.s_n")),
        Wire(uid=UidWire("W:sir_s_n_exp.s_n>sir_s_exp.s_n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_s_n_exp.s_n"),
             tgt=UidPort("P:sir_s_exp.s_n")),
        Wire(uid=UidWire("W:sir_i_n_exp.i_n>sir_scale_exp.i_n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_i_n_exp.i_n"),
             tgt=UidPort("P:sir_scale_exp.i_n")),
        Wire(uid=UidWire("W:sir_i_n_exp.i_n>sir_i_exp.i_n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_i_n_exp.i_n"),
             tgt=UidPort("P:sir_i_exp.i_n")),
        Wire(uid=UidWire("W:sir_r_n_exp.r_n>sir_scale_exp.r_n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_r_n_exp.r_n"),
             tgt=UidPort("P:sir_scale_exp.r_n")),
        Wire(uid=UidWire("W:sir_r_n_exp.r_n>sir_r_exp.r_n"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_r_n_exp.r_n"),
             tgt=UidPort("P:sir_r_exp.r_n")),

        Wire(uid=UidWire("W:sir_scale_exp.scale>sir_s_exp.scale"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_scale_exp.scale"),
             tgt=UidPort("P:sir_s_exp.scale")),
        Wire(uid=UidWire("W:sir_scale_exp.scale>sir_i_exp.scale"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_scale_exp.scale"),
             tgt=UidPort("P:sir_i_exp.scale")),
        Wire(uid=UidWire("W:sir_scale_exp.scale>sir_r_exp.scale"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_scale_exp.scale"),
             tgt=UidPort("P:sir_r_exp.scale")),

        Wire(uid=UidWire("W:sir_s_exp.s>sir.s_out"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_s_exp.s"),
             tgt=UidPort("P:sir.s_out")),

        Wire(uid=UidWire("W:sir_i_exp.i>sir.i_out"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_i_exp.i"),
             tgt=UidPort("P:sir.i_out")),

        Wire(uid=UidWire("W:sir_r_exp.r>sir.r_out"),
             type=None,
             value_type=UidType("Float"),
             name=None, value=None, metadata=None,
             src=UidPort("P:sir_r_exp.r"),
             tgt=UidPort("P:sir.r_out"))
    ]

    ports_simsir = [

        # -- sim_sir() Ports --

        # simsir in
        Port(uid=UidPort("P:simsir.in.s"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.in.i"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.in.r"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.in.gamma"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="gamma",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.in.betas"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="betas",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.in.days"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="days",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.in.N_p"),
             box=UidBox("B:simsir"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="N_p",
             value=None, metadata=None),
        # simsir out
        Port(uid=UidPort("P:simsir.out.s"),
             box=UidBox("B:simsir"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.out.i"),
             box=UidBox("B:simsir"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir.out.r"),
             box=UidBox("B:simsir"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),

        # simsir_loop_1_range_init_exp in
        Port(uid=UidPort("P:simsir_loop_1_range_init_exp.in.N_p"),
             box=UidBox("B:simsir_loop_1_range_init_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="N_p",
             value=None, metadata=None),
        # simsir_loop_1_range_init_exp out
        Port(uid=UidPort("P:simsir_loop_1_range_init_exp.out.loop_1_seq"),
             box=UidBox("B:simsir_loop_1_range_init_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Sequence"),
             name="loop_1_seq",
             value=None, metadata=None),

        # simsir_loop_1_get_p_idx_init_exp in
        Port(uid=UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_seq"),
             box=UidBox("B:simsir_loop_1_get_p_idx_init_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_seq",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_i"),
             box=UidBox("B:simsir_loop_1_get_p_idx_init_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_i",
             value=None, metadata=None),
        # simsir_loop_1_get_p_idx_init_exp out
        Port(uid=UidPort("P:simsir_loop_1_get_p_idx_init_exp.out.p_idx"),
             box=UidBox("B:simsir_loop_1_get_p_idx_init_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="p_idx",
             value=None, metadata=None),

        # simsir_n_exp in
        Port(uid=UidPort("P:simsir_n_exp.in.s"),
             box=UidBox("B:simsir_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_n_exp.in.i"),
             box=UidBox("B:simsir_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_n_exp.in.r"),
             box=UidBox("B:simsir_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
        # simsir_n_exp out
        Port(uid=UidPort("P:simsir_n_exp.out.n"),
             box=UidBox("B:simsir_n_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
    ]

    ports_simsir_loop_1 = [
        # simsir_loop_1 in <loop control>
        Port(uid=UidPort("P:simsir_loop_1.in.p_idx"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="p_idx",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.loop_1_seq"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_seq",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.loop_1_i"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_i",
             value=None, metadata=None),
        # simsir_loop_1 out <loop control>
        PortCall(uid=UidPort("PC:simsir_loop_1.out.p_idx"),
                 call=UidPort("P:simsir_loop_1.in.p_idx"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="p_idx",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.loop_1_seq"),
                 call=UidPort("P:simsir_loop_1.in.loop_1_seq"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Sequence"),
                 name="loop_1_seq",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.loop_1_i"),
                 call=UidPort("P:simsir_loop_1.in.loop_1_i"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="loop_1_i",
                 value=None,
                 metadata=None),

        # simsir_loop_1 in <body>
        Port(uid=UidPort("P:simsir_loop_1.in.days"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="days",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.betas"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="betas",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.n"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="n",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.s"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.i"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.r"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1.in.gamma"),
             box=UidBox("B:simsir_loop_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="gamma",
             value=None, metadata=None),
        # simsir_loop_1 out <body>
        PortCall(uid=UidPort("PC:simsir_loop_1.out.days"),
                 call=UidPort("P:simsir_loop_1.in.days"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Sequence"),
                 name="days",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.betas"),
                 call=UidPort("P:simsir_loop_1.in.betas"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Sequence"),
                 name="betas",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.n"),
                 call=UidPort("P:simsir_loop_1.in.n"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name="n",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.s"),
                 call=UidPort("P:simsir_loop_1.in.s"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name="s",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.i"),
                 call=UidPort("P:simsir_loop_1.in.i"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name="i",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.r"),
                 call=UidPort("P:simsir_loop_1.in.r"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name="r",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1.out.gamma"),
                 call=UidPort("P:simsir_loop_1.in.gamma"),
                 box=UidBox("B:simsir_loop_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name="gamma",
                 value=None,
                 metadata=None),

        # simsir_loop_1_i_exp in
        Port(uid=UidPort("P:simsir_loop_1_i_exp.in.loop_1_i"),
             box=UidBox("B:simsir_loop_1_i_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_i",
             value=None, metadata=None),
        # simsir_loop_1_i_exp out
        Port(uid=UidPort("P:simsir_loop_1_i_exp.out.loop_1_i"),
             box=UidBox("B:simsir_loop_1_i_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="loop_1_i",
             value=None, metadata=None),

        # simsir_loop_1_i_exp in
        Port(uid=UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_seq"),
             box=UidBox("B:simsir_loop_1_get_p_idx_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_seq",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_i"),
             box=UidBox("B:simsir_loop_1_get_p_idx_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_i",
             value=None, metadata=None),
        # simsir_loop_1_i_exp out
        Port(uid=UidPort("P:simsir_loop_1_get_p_idx_exp.out.p_idx"),
             box=UidBox("B:simsir_loop_1_get_p_idx_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="p_idx",
             value=None, metadata=None),

        # simsir_loop_1_cond in
        Port(uid=UidPort("P:simsir_loop_1_cond.in.p_idx"),
             box=UidBox("B:simsir_loop_1_cond"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="p_idx",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_cond.in.loop_1_seq"),
             box=UidBox("B:simsir_loop_1_cond"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_seq",
             value=None, metadata=None),
        # simsir_loop_1_cond out
        Port(uid=UidPort("P:simsir_loop_1_cond.out.exit"),
             box=UidBox("B:simsir_loop_1_cond"),
             type=UidType("PortOutput"),
             value_type=UidType("Boolean"),
             name="exit",
             value=None, metadata=None),

        # -- loop_1 body components

        # simsir_loop_1_n_days_exp in
        Port(uid=UidPort("P:simsir_loop_1_n_days_exp.in.days"),
             box=UidBox("B:simsir_loop_1_n_days_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="days",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_n_days_exp.in.p_idx"),
             box=UidBox("B:simsir_loop_1_n_days_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="p_idx",
             value=None, metadata=None),
        # simsir_loop_1_n_days_exp out
        Port(uid=UidPort("P:simsir_loop_1_n_days_exp.out.n_days"),
             box=UidBox("B:simsir_loop_1_n_days_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="n_days",
             value=None, metadata=None),

        # simsir_loop_1_get_beta_exp in
        Port(uid=UidPort("P:simsir_loop_1_get_beta_exp.in.betas"),
             box=UidBox("B:simsir_loop_1_get_beta_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="betas",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_get_beta_exp.in.p_idx"),
             box=UidBox("B:simsir_loop_1_get_beta_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="p_idx",
             value=None, metadata=None),
        # simsir_loop_1_get_beta_exp out
        Port(uid=UidPort("P:simsir_loop_1_get_beta_exp.out.beta"),
             box=UidBox("B:simsir_loop_1_get_beta_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="beta",
             value=None, metadata=None),

        # -- in loop_1: loop_1_1 for-loop sequence iteration initialization

        # simsir_loop_1_1_range_init_exp in
        Port(uid=UidPort("P:simsir_loop_1_1_range_init_exp.in.n_days"),
             box=UidBox("B:simsir_loop_1_1_range_init_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="n_days",
             value=None, metadata=None),
        # simsir_loop_1_1_range_init_exp out
        Port(uid=UidPort("P:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq"),
             box=UidBox("B:simsir_loop_1_1_range_init_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Sequence"),
             name="loop_1_1_seq",
             value=None, metadata=None),

        # simsir_loop_1_1_get_d_idx_init_exp in
        Port(uid=UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_seq"),
             box=UidBox("B:simsir_loop_1_1_get_d_idx_init_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_1_seq",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_i"),
             box=UidBox("B:simsir_loop_1_1_get_d_idx_init_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_1_i",
             value=None, metadata=None),
        # simsir_loop_1_1_get_d_idx_init_exp out
        Port(uid=UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.out.d_idx"),
             box=UidBox("B:simsir_loop_1_1_get_d_idx_init_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="d_idx",
             value=None, metadata=None),
    ]

    ports_simsir_loop_1_1 = [

        # simsir_loop_1_1 in <loop control>
        Port(uid=UidPort("P:simsir_loop_1_1.in.d_idx"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="d_idx",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.loop_1_1_seq"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_1_seq",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.loop_1_1_i"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_1_i",
             value=None, metadata=None),
        # simsir_loop_1_1 out <loop control>
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.d_idx"),
                 call=UidPort("P:simsir_loop_1_1.in.d_idx"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="d_idx",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.loop_1_1_seq"),
                 call=UidPort("P:simsir_loop_1_1.in.loop_1_1_seq"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Sequence"),
                 name="loop_1_1_seq",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.loop_1_1_i"),
                 call=UidPort("P:simsir_loop_1_1.in.loop_1_1_i"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="loop_1_1_i",
                 value=None,
                 metadata=None),

        # simsir_loop_1_1 in <body>
        Port(uid=UidPort("P:simsir_loop_1_1.in.s"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.i"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.r"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.n"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="n",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.beta"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="beta",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1.in.gamma"),
             box=UidBox("B:simsir_loop_1_1"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="gamma",
             value=None, metadata=None),
        # simsir_loop_1_1 out <body>
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.s"),
                 call=UidPort("P:simsir_loop_1_1.in.s"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="s",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.i"),
                 call=UidPort("P:simsir_loop_1_1.in.i"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="i",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.r"),
                 call=UidPort("P:simsir_loop_1_1.in.r"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="r",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.n"),
                 call=UidPort("P:simsir_loop_1_1.in.n"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="n",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.gamma"),
                 call=UidPort("P:simsir_loop_1_1.in.gamma"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="gamma",
                 value=None,
                 metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1.out.beta"),
                 call=UidPort("P:simsir_loop_1_1.in.beta"),
                 box=UidBox("B:simsir_loop_1_1"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Integer"),
                 name="beta",
                 value=None,
                 metadata=None),

        # simsir_loop_1_1_cond in
        Port(uid=UidPort("P:simsir_loop_1_1_cond.in.d_idx"),
             box=UidBox("B:simsir_loop_1_1_cond"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="d_idx",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1_cond.in.loop_1_1_seq"),
             box=UidBox("B:simsir_loop_1_1_cond"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_1_seq",
             value=None, metadata=None),
        # simsir_loop_1_1_cond out
        Port(uid=UidPort("P:simsir_loop_1_1_cond.out.exit"),
             box=UidBox("B:simsir_loop_1_1_cond"),
             type=UidType("PortOutput"),
             value_type=UidType("Boolean"),
             name="exit",
             value=None, metadata=None),

        # simsir_loop_1_1_i_exp in
        Port(uid=UidPort("P:simsir_loop_1_1_i_exp.in.loop_1_1_i"),
             box=UidBox("B:simsir_loop_1_1_i_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_1_i",
             value=None, metadata=None),
        # simsir_loop_1_1_i_exp out
        Port(uid=UidPort("P:simsir_loop_1_1_i_exp.out.loop_1_1_i"),
             box=UidBox("B:simsir_loop_1_1_i_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="loop_1_1_i",
             value=None, metadata=None),

        # simsir_loop_1_1_get_d_idx_exp in
        Port(uid=UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_seq"),
             box=UidBox("B:simsir_loop_1_1_get_d_idx_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Sequence"),
             name="loop_1_1_seq",
             value=None, metadata=None),
        Port(uid=UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_i"),
             box=UidBox("B:simsir_loop_1_1_get_d_idx_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="loop_1_1_i",
             value=None, metadata=None),
        # simsir_loop_1_1_get_d_idx_exp out
        Port(uid=UidPort("P:simsir_loop_1_1_get_d_idx_exp.out.d_idx"),
             box=UidBox("B:simsir_loop_1_1_get_d_idx_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Integer"),
             name="d_idx",
             value=None, metadata=None),

        # simsir_loop_1_1_call_sir_exp in
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.s"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.s_in"),
                 type=UidType("PortInput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.i"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.i_in"),
                 type=UidType("PortInput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.r"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.r_in"),
                 type=UidType("PortInput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.beta"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.beta"),
                 type=UidType("PortInput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.gamma"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.gamma"),
                 type=UidType("PortInput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.in.n"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.n"),
                 type=UidType("PortInput"),
                 value_type=UidType("Integer"),
                 name=None, value=None, metadata=None),
        # simsir_loop_1_1_call_sir_exp out
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.s"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.s_out"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.i"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.i_out"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
        PortCall(uid=UidPort("PC:simsir_loop_1_1_call_sir_exp.out.r"),
                 box=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                 call=UidPort("P:sir.r_out"),
                 type=UidType("PortOutput"),
                 value_type=UidType("Float"),
                 name=None, value=None, metadata=None),
    ]

    ports_sir = [

        # -- sir() Ports --

        # sir in
        Port(uid=UidPort("P:sir.n"),
             box=UidBox("B:sir"),
             type=UidType("PortInput"),
             value_type=UidType("Integer"),
             name="n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.beta"),
             box=UidBox("B:sir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="beta",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.gamma"),
             box=UidBox("B:sir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="gamma",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.s_in"),
             box=UidBox("B:sir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.i_in"),
             box=UidBox("B:sir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.r_in"),
             box=UidBox("B:sir"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
        # sir out
        Port(uid=UidPort("P:sir.s_out"),
             box=UidBox("B:sir"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.i_out"),
             box=UidBox("B:sir"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir.r_out"),
             box=UidBox("B:sir"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),

        # sir_s_n_exp in
        Port(uid=UidPort("P:sir_s_n_exp.beta"),
             box=UidBox("B:sir_s_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="beta",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_s_n_exp.s"),
             box=UidBox("B:sir_s_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_s_n_exp.i"),
             box=UidBox("B:sir_s_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        # sir_s_n_exp out
        Port(uid=UidPort("P:sir_s_n_exp.s_n"),
             box=UidBox("B:sir_s_n_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="s_n",
             value=None, metadata=None),

        # sir_s_n_exp in
        Port(uid=UidPort("P:sir_i_n_exp.beta"),
             box=UidBox("B:sir_i_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="beta",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_i_n_exp.s"),
             box=UidBox("B:sir_i_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_i_n_exp.i"),
             box=UidBox("B:sir_i_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_i_n_exp.gamma"),
             box=UidBox("B:sir_i_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="gamma",
             value=None, metadata=None),
        # sir_i_n_exp out
        Port(uid=UidPort("P:sir_i_n_exp.i_n"),
             box=UidBox("B:sir_i_n_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="i_n",
             value=None, metadata=None),

        # sir_r_n_exp in
        Port(uid=UidPort("P:sir_r_n_exp.gamma"),
             box=UidBox("B:sir_r_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="gamma",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_r_n_exp.i"),
             box=UidBox("B:sir_r_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_r_n_exp.r"),
             box=UidBox("B:sir_r_n_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
        # sir_r_n_exp out
        Port(uid=UidPort("P:sir_r_n_exp.r_n"),
             box=UidBox("B:sir_r_n_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="r_n",
             value=None, metadata=None),

        # sir_scale_exp in
        Port(uid=UidPort("P:sir_scale_exp.n"),
             box=UidBox("B:sir_scale_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_scale_exp.s_n"),
             box=UidBox("B:sir_scale_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s_n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_scale_exp.i_n"),
             box=UidBox("B:sir_scale_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i_n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_scale_exp.r_n"),
             box=UidBox("B:sir_scale_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r_n",
             value=None, metadata=None),
        # sir_scale_exp out
        Port(uid=UidPort("P:sir_scale_exp.scale"),
             box=UidBox("B:sir_scale_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="scale",
             value=None, metadata=None),

        # sir_s_exp in
        Port(uid=UidPort("P:sir_s_exp.s_n"),
             box=UidBox("B:sir_s_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="s_n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_s_exp.scale"),
             box=UidBox("B:sir_s_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="scale",
             value=None, metadata=None),
        # sir_s_exp out
        Port(uid=UidPort("P:sir_s_exp.s"),
             box=UidBox("B:sir_s_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="s",
             value=None, metadata=None),

        # sir_i_exp in
        Port(uid=UidPort("P:sir_i_exp.i_n"),
             box=UidBox("B:sir_i_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="i_n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_i_exp.scale"),
             box=UidBox("B:sir_i_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="scale",
             value=None, metadata=None),
        # sir_i_exp out
        Port(uid=UidPort("P:sir_i_exp.i"),
             box=UidBox("B:sir_i_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="i",
             value=None, metadata=None),

        # sir_r_exp in
        Port(uid=UidPort("P:sir_r_exp.r_n"),
             box=UidBox("B:sir_r_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="r_n",
             value=None, metadata=None),
        Port(uid=UidPort("P:sir_r_exp.scale"),
             box=UidBox("B:sir_r_exp"),
             type=UidType("PortInput"),
             value_type=UidType("Float"),
             name="scale",
             value=None, metadata=None),
        # sir_r_exp out
        Port(uid=UidPort("P:sir_r_exp.r"),
             box=UidBox("B:sir_r_exp"),
             type=UidType("PortOutput"),
             value_type=UidType("Float"),
             name="r",
             value=None, metadata=None),
    ]

    junctions_simsir = [
        Junction(uid=UidJunction("J:simsir.loop_1_i"),
                 name='loop_1_i',
                 type=None,
                 value=Literal(uid=None,
                               type=UidType('Integer'),
                               value=Val('0'),
                               name=None, metadata=None),
                 value_type=UidType('Integer'),
                 metadata=None),
    ]

    junctions_simsir_loop_1 = [
        Junction(uid=UidJunction('J:simsir_loop_1.loop_1_1_i'),
                 name='loop_1_1_i',
                 type=None,
                 value=Literal(uid=None,
                               type=UidType('Integer'),
                               value=Val('0'),
                               name=None, metadata=None),
                 value_type=UidType('Integer'),
                 metadata=None),
    ]

    # -- sim_sir() Expressions and Function --

    # simsir_loop_1_1_call_sir_exp
    simsir_loop_1_1_call_sir_exp = \
        BoxCall(uid=UidBox("B:simsir_loop_1_1_call_sir_exp"),
                type=None,
                name=None,
                call=UidBox("B:sir"),
                ports=[UidPort("PC:simsir_loop_1_1_call_sir_exp.in.s"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.in.i"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.in.r"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.in.beta"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.in.gamma"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.in.n"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.out.s"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.out.i"),
                       UidPort("PC:simsir_loop_1_1_call_sir_exp.out.r")
                       ],
                metadata=None)

    # simsir_loop_1_1_cond
    simsir_loop_1_1_cond_e0 = \
        Expr(call=RefOp(UidOp('len')),
             args=[UidPort("P:simsir_loop_1_1_cond.in.loop_1_1_seq")])
    simsir_loop_1_1_cond_e1 = \
        Expr(call=RefOp(UidOp('lt')),
             args=[UidPort("P:simsir_loop_1_1_cond.in.d_idx"),
                   simsir_loop_1_1_cond_e0])
    simsir_loop_1_1_cond = \
        Predicate(uid=UidBox("B:simsir_loop_1_1_cond"),
                  type=None,
                  name=None,
                  ports=[UidPort("P:simsir_loop_1_1_cond.in.d_idx"),
                         UidPort("P:simsir_loop_1_1_cond.in.loop_1_1_seq"),
                         UidPort("P:simsir_loop_1_1_cond.out.exit")],
                  tree=simsir_loop_1_1_cond_e1,
                  metadata=None)

    # simsir_loop_1_1_i_exp
    simsir_loop_1_1_i_exp_e0 = \
        Expr(call=RefOp(UidOp('+')),
             args=[UidPort("P:simsir_loop_1_1_i_exp.in.loop_1_1_i"),
                   Literal(uid=None, type=UidType("Integer"), value=Val("1"),
                           name=None, metadata=None)])
    simsir_loop_1_1_i_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_1_i_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_1_i_exp.in.loop_1_1_i"),
                          UidPort("P:simsir_loop_1_1_i_exp.out.loop_1_1_i")],
                   tree=simsir_loop_1_1_i_exp_e0,
                   metadata=None)

    # simsir_loop_1_1_get_d_idx_exp
    simsir_loop_1_1_get_d_idx_exp_e0 = \
        Expr(call=RefOp(UidOp('get')),
             args=[UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_seq"),
                   UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_i")])
    simsir_loop_1_1_get_d_idx_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_1_get_d_idx_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_seq"),
                          UidPort("P:simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_i"),
                          UidPort("P:simsir_loop_1_1_get_d_idx_exp.out.d_idx")],
                   tree=simsir_loop_1_1_get_d_idx_exp_e0,
                   metadata=None)

    # simsir_loop_1_1
    simsir_loop_1_1 = \
        Loop(uid=UidBox("B:simsir_loop_1_1"),
             type=None,
             name=None,
             ports=[
                 # -- "control" loop ports
                 UidPort("P:simsir_loop_1_1.in.d_idx"),
                 UidPort("P:simsir_loop_1_1.in.loop_1_1_seq"),
                 UidPort("P:simsir_loop_1_1.in.loop_1_1_i"),
                 UidPort("PC:simsir_loop_1_1.out.d_idx"),
                 UidPort("PC:simsir_loop_1_1.out.loop_1_1_seq"),
                 UidPort("PC:simsir_loop_1_1.out.loop_1_1_i"),

                 # -- "body" loop inputs
                 UidPort("P:simsir_loop_1_1.in.s"),
                 UidPort("P:simsir_loop_1_1.in.i"),
                 UidPort("P:simsir_loop_1_1.in.r"),
                 UidPort("P:simsir_loop_1_1.in.n"),
                 UidPort("P:simsir_loop_1_1.in.gamma"),
                 UidPort("P:simsir_loop_1_1.in.beta"),
                 # -- "body" loop outputs
                 UidPort("PC:simsir_loop_1_1.out.s"),
                 UidPort("PC:simsir_loop_1_1.out.i"),
                 UidPort("PC:simsir_loop_1_1.out.r"),
                 UidPort("PC:simsir_loop_1_1.out.n"),
                 UidPort("PC:simsir_loop_1_1.out.gamma"),
                 UidPort("PC:simsir_loop_1_1.out.beta")
             ],

             exit_condition=UidBox("B:simsir_loop_1_1_cond"),

             # contents
             wires=[
                 UidWire("W:simsir_loop_1_1.in.d_idx>simsir_loop_1_1_cond.in.d_idx"),
                 UidWire("W:simsir_loop_1_1.in.loop_1_1_seq>simsir_loop_1_1_cond.in.loop_1_1_seq"),
                 UidWire("W:simsir_loop_1_1.in.loop_1_1_i>simsir_loop_1_1_i_exp.in.loop_1_1_i"),
                 UidWire("W:simsir_loop_1_1.in.loop_1_1_seq>simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_seq"),
                 UidWire("W:simsir_loop_1_1_i_exp.out.loop_1_1_i>simsir_loop_1_1_get_d_idx_exp.in.loop_1_1_i"),
                 UidWire("W:simsir_loop_1_1_i_exp.out.loop_1_1_i>simsir_loop_1_1.out.loop_1_1_i"),
                 UidWire("W:simsir_loop_1_1_get_d_idx_exp.out.d_idx>simsir_loop_1_1.out.d_idx"),
                 UidWire("W:simsir_loop_1_1.in.n>simsir_loop_1_1_call_sir_exp.in.n"),
                 UidWire("W:simsir_loop_1_1.in.s>simsir_loop_1_1_call_sir_exp.in.s"),
                 UidWire("W:simsir_loop_1_1.in.i>simsir_loop_1_1_call_sir_exp.in.i"),
                 UidWire("W:simsir_loop_1_1.in.r>simsir_loop_1_1_call_sir_exp.in.r"),
                 UidWire("W:simsir_loop_1_1.in.gamma>simsir_loop_1_1_call_sir_exp.in.gamma"),
                 UidWire("W:simsir_loop_1_1.in.beta>simsir_loop_1_1_call_sir_exp.in.beta"),
                 UidWire("W:simsir_loop_1_1_call_sir_exp.out.s>simsir_loop_1_1.out.s"),
                 UidWire("W:simsir_loop_1_1_call_sir_exp.out.i>simsir_loop_1_1.out.i"),
                 UidWire("W:simsir_loop_1_1_call_sir_exp.out.r>simsir_loop_1_1.out.r")
             ],
             junctions=None,
             boxes=[
                 UidBox("B:simsir_loop_1_1_i_exp"),
                 UidBox("B:simsir_loop_1_1_get_d_idx_exp"),
                 UidBox("B:simsir_loop_1_1_call_sir_exp")
             ],

             metadata=None)

    # simsir_loop_1

    # -- loop_1 control components

    # simsir_loop_1_cond
    simsir_loop_1_cond_e0 = \
        Expr(call=RefOp(UidOp('len')),
             args=[UidPort("P:simsir_loop_1_cond.in.loop_1_seq")])
    simsir_loop_1_cond_e1 = \
        Expr(call=RefOp(UidOp('lt')),
             args=[UidPort("P:simsir_loop_1_cond.in.p_idx"),
                   simsir_loop_1_cond_e0])
    simsir_loop_1_cond = \
        Predicate(uid=UidBox("B:simsir_loop_1_cond"),
                  type=None,
                  name=None,
                  ports=[UidPort("P:simsir_loop_1_cond.in.p_idx"),
                         UidPort("P:simsir_loop_1_cond.in.loop_1_seq"),
                         UidPort("P:simsir_loop_1_cond.out.exit")],
                  tree=simsir_loop_1_cond_e1,
                  metadata=None)

    # simsir_loop_1_i_exp
    simsir_loop_1_i_exp_e0 = \
        Expr(call=RefOp(UidOp('+')),
             args=[UidPort("P:simsir_loop_1_i_exp.in.loop_1_i"),
                   Literal(uid=None, type=UidType("Integer"), value=Val("1"),
                           name=None, metadata=None)])
    simsir_loop_1_i_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_i_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_i_exp.in.loop_1_i"),
                          UidPort("P:simsir_loop_1_i_exp.out.loop_1_i")],
                   tree=simsir_loop_1_i_exp_e0,
                   metadata=None)

    # simsir_loop_1_get_p_idx_exp
    simsir_loop_1_get_p_idx_exp_e0 = \
        Expr(call=RefOp(UidOp('get')),
             args=[UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_seq"),
                   UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_i")])
    simsir_loop_1_get_p_idx_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_get_p_idx_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_seq"),
                          UidPort("P:simsir_loop_1_get_p_idx_exp.in.loop_1_i"),
                          UidPort("P:simsir_loop_1_get_p_idx_exp.out.p_idx")],
                   tree=simsir_loop_1_get_p_idx_exp_e0,
                   metadata=None)

    # -- loop_1 body components

    # simsir_loop_1_n_days_exp
    simsir_loop_1_n_days_exp_e0 = \
        Expr(call=RefOp(UidOp('get')),
             args=[UidPort("P:simsir_loop_1_n_days_exp.in.days"),
                   UidPort("P:simsir_loop_1_n_days_exp.in.p_idx")])
    simsir_loop_1_n_days_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_n_days_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_n_days_exp.in.days"),
                          UidPort("P:simsir_loop_1_n_days_exp.in.p_idx"),
                          UidPort("P:simsir_loop_1_n_days_exp.out.n_days")],
                   tree=simsir_loop_1_n_days_exp_e0,
                   metadata=None)

    # simsir_loop_1_get_beta_exp
    simsir_loop_1_get_beta_exp_e0 = \
        Expr(call=RefOp(UidOp('get')),
             args=[UidPort("P:simsir_loop_1_get_beta_exp.in.betas"),
                   UidPort("P:simsir_loop_1_get_beta_exp.in.p_idx")])
    simsir_loop_1_get_beta_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_get_beta_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_get_beta_exp.in.betas"),
                          UidPort("P:simsir_loop_1_get_beta_exp.in.p_idx"),
                          UidPort("P:simsir_loop_1_get_beta_exp.out.beta")],
                   tree=simsir_loop_1_get_beta_exp_e0,
                   metadata=None)

    # -- in loop_1: loop_1_1 for-loop sequence iteration initialization

    # simsir_loop_1_1_range_init_exp
    simsir_loop_1_1_range_init_exp_e0 = \
        Expr(call=RefOp(UidOp('range')),
             args=[UidPort("P:simsir_loop_1_1_range_init_exp.in.n_days")])
    simsir_loop_1_1_range_init_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_1_range_init_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_1_range_init_exp.in.n_days"),
                          UidPort("P:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq")],
                   tree=simsir_loop_1_1_range_init_exp_e0,
                   metadata=None)

    # simsir_loop_1_1_get_d_idx_init_exp
    simsir_loop_1_1_get_d_idx_init_exp_0 = \
        Expr(call=RefOp(UidOp('get')),
             args=[UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_seq"),
                   UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_i")])
    simsir_loop_1_1_get_d_idx_init_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_1_get_d_idx_init_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_seq"),
                          UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_i"),
                          UidPort("P:simsir_loop_1_1_get_d_idx_init_exp.out.d_idx")],
                   tree=simsir_loop_1_1_get_d_idx_init_exp_0,
                   metadata=None)

    simsir_loop_1 = \
        Loop(uid=UidBox("B:simsir_loop_1"),
             type=None,
             name=None,
             ports=[
                 # -- "control" loop ports
                 UidPort("P:simsir_loop_1.in.p_idx"),
                 UidPort("P:simsir_loop_1.in.loop_1_seq"),
                 UidPort("P:simsir_loop_1.in.loop_1_i"),

                 UidPort("PC:simsir_loop_1.out.p_idx"),
                 UidPort("PC:simsir_loop_1.out.loop_1_seq"),
                 UidPort("PC:simsir_loop_1.out.loop_1_i"),

                 # -- "body" loop inputs
                 UidPort("P:simsir_loop_1.in.days"),
                 UidPort("P:simsir_loop_1.in.betas"),
                 UidPort("P:simsir_loop_1.in.n"),
                 UidPort("P:simsir_loop_1.in.s"),
                 UidPort("P:simsir_loop_1.in.i"),
                 UidPort("P:simsir_loop_1.in.r"),
                 UidPort("P:simsir_loop_1.in.gamma"),

                 # -- "body" loop outputs
                 UidPort("PC:simsir_loop_1.out.days"),
                 UidPort("PC:simsir_loop_1.out.betas"),
                 UidPort("PC:simsir_loop_1.out.n"),
                 UidPort("PC:simsir_loop_1.out.s"),
                 UidPort("PC:simsir_loop_1.out.i"),
                 UidPort("PC:simsir_loop_1.out.r"),
                 UidPort("PC:simsir_loop_1.out.gamma"),

            ],

             exit_condition=UidBox("B:simsir_loop_1_cond"),

             # contents
             junctions=[UidJunction('J:simsir_loop_1.loop_1_1_i')],
             wires=[
                 # loop_1 control
                 UidWire("W:simsir_loop_1.in.p_idx>simsir_loop_1_cond.in.p_idx"),
                 UidWire("W:simsir_loop_1.in.loop_1_seq>simsir_loop_1_cond.in.loop_1_seq"),
                 UidWire("W:simsir_loop_1.in.loop_1_i>simsir_loop_1_i_exp.in.loop_1_i"),
                 UidWire("W:simsir_loop_1.in.loop_1_seq>simsir_loop_1_get_p_idx_exp.in.loop_1_seq"),
                 UidWire("W:simsir_loop_1_i_exp.out.loop_1_i>simsir_loop_1_get_p_idx_exp.in.loop_1_i"),
                 UidWire("W:simsir_loop_1_i_exp.out.loop_1_i>simsir_loop_1.out.loop_1_i"),
                 UidWire("W:simsir_loop_1_get_p_idx_exp.out.p_idx>simsir_loop_1.out.p_idx"),

                 # loop_1 body
                 UidWire("W:simsir_loop_1.in.days>simsir_loop_1_n_days_exp.in.days"),
                 UidWire("W:simsir_loop_1_get_p_idx_exp.out.p_idx>simsir_loop_1_n_days_exp.in.p_idx"),
                 UidWire("W:simsir_loop_1_n_days_exp.out.n_days>simsir_loop_1_1_range_init_exp.in.n_days"),
                 UidWire("W:simsir_loop_1.in.betas>simsir_loop_1_get_beta_exp.in.betas"),
                 UidWire("W:simsir_loop_1_get_p_idx_exp.out.p_idx>simsir_loop_1_get_beta_exp.in.p_idx"),
                 UidWire("W:simsir_loop_1_get_beta_exp.out.beta>simsir_loop_1_1.in.beta"),

                 # loop_1 body passthrough
                 UidWire("W:simsir_loop_1.in.n>simsir_loop_1_1.in.n"),
                 UidWire("W:simsir_loop_1.in.s>simsir_loop_1_1.in.s"),
                 UidWire("W:simsir_loop_1.in.i>simsir_loop_1_1.in.i"),
                 UidWire("W:simsir_loop_1.in.r>simsir_loop_1_1.in.r"),
                 UidWire("W:simsir_loop_1.in.gamma>simsir_loop_1_1.in.gamma"),
                 UidWire("W:simsir_loop_1_1.out.s>simsir_loop_1.out.s"),
                 UidWire("W:simsir_loop_1_1.out.i>simsir_loop_1.out.i"),
                 UidWire("W:simsir_loop_1_1.out.r>simsir_loop_1.out.r"),

                 # loop_1_1 for-iteration init
                 UidWire("W:simsir_loop_1_1_get_d_idx_init_exp.out.d_idx>simsir_loop_1_1.in.d_idx"),
                 UidWire("W:simsir_loop_1.loop_1_1_i>simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_i"),
                 UidWire("W:simsir_loop_1.loop_1_1_i>simsir_loop_1_1.in.loop_1_1_i"),
                 UidWire("W:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq>simsir_loop_1_1_get_d_idx_init_exp.in.loop_1_1_seq"),
                 UidWire("W:simsir_loop_1_1_range_init_exp.out.loop_1_1_seq>simsir_loop_1_1.in.loop_1_1_seq"),
             ],
             boxes=[
                 # control
                 UidBox("B:simsir_loop_1_i_exp"),
                 UidBox("B:simsir_loop_1_get_p_idx_exp"),

                 # body
                 UidBox("B:simsir_loop_1_n_days_exp"),
                 UidBox("B:simsir_loop_1_get_beta_exp"),

                 # loop_1_1 for-iteration init
                 UidBox("B:simsir_loop_1_1_range_init_exp"),
                 UidBox("B:simsir_loop_1_1_get_d_idx_init_exp"),
                 UidBox("B:simsir_loop_1_1"),
             ],

             metadata=None
             )

    # -- in simsir: loop_1 for-loop sequence iteration initialization

    # simsir_loop_1_range_init_exp
    simsir_loop_1_range_init_exp_e0 = \
        Expr(call=RefOp(UidOp('range')),
             args=[UidPort("P:simsir_loop_1_range_init_exp.in.N_p")])
    simsir_loop_1_range_init_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_range_init_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_range_init_exp.in.N_p"),
                          UidPort("P:simsir_loop_1_range_init_exp.out.loop_1_seq")],
                   tree=simsir_loop_1_range_init_exp_e0,
                   metadata=None)

    # simsir_loop_1_get_p_idx_init_exp
    simsir_loop_1_get_p_idx_init_exp_e0 = \
        Expr(call=RefOp(UidOp('get')),
             args=[UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_seq"),
                   UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_i")])
    simsir_loop_1_get_p_idx_init_exp = \
        Expression(uid=UidBox("B:simsir_loop_1_get_p_idx_init_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_seq"),
                          UidPort("P:simsir_loop_1_get_p_idx_init_exp.in.loop_1_i"),
                          UidPort("P:simsir_loop_1_get_p_idx_init_exp.out.p_idx")],
                   tree=simsir_loop_1_get_p_idx_init_exp_e0,
                   metadata=None)

    # simsir_n_exp
    simsir_n_exp_e0 = \
        Expr(call=RefOp(UidOp('+')),
             args=[UidPort("P:simsir_n_exp.in.s"),
                   UidPort("P:simsir_n_exp.in.i"),
                   UidPort("P:simsir_n_exp.in.r")])
    simsir_n_exp = \
        Expression(uid=UidBox("B:simsir_n_exp"),
                   type=None,
                   name=None,
                   ports=[UidPort("P:simsir_n_exp.in.s"),
                          UidPort("P:simsir_n_exp.in.i"),
                          UidPort("P:simsir_n_exp.in.r"),
                          UidPort("P:simsir_n_exp.out.n")],
                   tree=simsir_n_exp_e0,
                   metadata=None)

    # todo CTM: using as stub
    simsir = \
        Function(uid=UidBox("B:simsir"),
                 type=None,
                 name=UidOp("sim_sir-d"),  # todo
                 ports=[
                     UidPort("P:simsir.in.s"),
                     UidPort("P:simsir.in.i"),
                     UidPort("P:simsir.in.r"),
                     UidPort("P:simsir.in.gamma"),
                     UidPort("P:simsir.in.betas"),
                     UidPort("P:simsir.in.days"),
                     UidPort("P:simsir.in.N_p"),

                     UidPort("P:simsir.out.s"),
                     UidPort("P:simsir.out.i"),
                     UidPort("P:simsir.out.r")
                 ],

                 # contents
                 junctions=[UidJunction("J:simsir.loop_1_i")],
                 wires=[
                     UidWire("W:simsir.in.N_p>simsir_loop_1_range_init_exp.in.N_p"),
                     UidWire("W:simsir_loop_1_range_init_exp.out.loop_1_seq>simsir_loop_1_get_p_idx_init_exp.in.loop_1_seq"),
                     UidWire("W:simsir_loop_1_range_init_exp.out.loop_1_seq>simsir_loop_1.in.loop_1_seq"),
                     UidWire("W:simsir_loop_1_get_p_idx_init_exp.out.p_idx>simsir_loop_1.in.p_idx"),
                     UidWire("W:simsir.loop_1_i>simsir_loop_1_get_p_idx_init_exp.in.loop_1_i"),
                     UidWire("W:simsir.loop_1_i>simsir_loop_1.in.loop_1_i"),
                     UidWire("W:simsir.in.days>simsir_loop_1.in.days"),
                     UidWire("W:simsir.in.betas>simsir_loop_1.in.betas"),
                     UidWire("W:simsir.in.gamma>simsir_loop_1.in.gamma"),
                     UidWire("W:simsir.in.s>simsir_loop_1.in.s"),
                     UidWire("W:simsir.in.s>simsir_n_exp.in.s"),
                     UidWire("W:simsir.in.i>simsir_loop_1.in.i"),
                     UidWire("W:simsir.in.i>simsir_n_exp.in.i"),
                     UidWire("W:simsir.in.r>simsir_loop_1.in.r"),
                     UidWire("W:simsir.in.r>simsir_n_exp.in.r"),
                     UidWire("W:simsir_n_exp.out.n>simsir_loop_1.in.n"),
                     UidWire("W:simsir_loop_1.out.s>simsir.out.s"),
                     UidWire("W:simsir_loop_1.out.i>simsir.out.i"),
                     UidWire("W:simsir_loop_1.out.r>simsir.out.r")
                 ],
                 boxes=[UidBox("B:simsir_loop_1_range_init_exp"),
                        UidBox("B:simsir_loop_1_get_p_idx_init_exp"),
                        UidBox("B:simsir_n_exp"),
                        UidBox("B:simsir_loop_1")],

                 metadata=None)

    # -- sir() --

    # Expression sir_s_n_exp
    # e1 = (* -1 beta i s) -> e1
    e1 = Expr(call=RefOp(UidOp('*')),
              args=[Literal(uid=None, type=UidType("Int"), value=Val("-1"),
                            name=None, metadata=None),
                    UidPort("P:sir_s_n_exp.beta"),
                    UidPort("P:sir_s_n_exp.s"),
                    UidPort("P:sir_s_n_exp.i")])
    # e2 = (+ e1 s) -> e2
    e2 = Expr(call=RefOp(UidOp('+')),
              args=[e1, UidPort("P:sir_s_n_exp.s")])
    sir_s_n_exp = Expression(uid=UidBox("B:sir_s_n_exp"),
                             type=None,
                             name=None,
                             ports=[UidPort("P:sir_s_n_exp.beta"),
                                    UidPort("P:sir_s_n_exp.s"),
                                    UidPort("P:sir_s_n_exp.i"),
                                    UidPort("P:sir_s_n_exp.s_n")],
                             tree=e2,
                             metadata=None)

    # Expression sir_i_n_exp
    # e3 = (* beta s i) -> e3
    e3 = Expr(call=RefOp(UidOp('*')),
              args=[UidPort("P:sir_i_n_exp.beta"),
                    UidPort("P:sir_i_n_exp.s"),
                    UidPort("P:sir_i_n_exp.i")])
    # e4 = (* -1 i gamma) -> e4
    e4 = Expr(call=RefOp(UidOp('*')),
              args=[Literal(uid=None, type=UidType("Int"), value=Val("-1"),
                            name=None, metadata=None),
                    UidPort("P:sir_i_n_exp.i"),
                    UidPort("P:sir_i_n_exp.gamma")])
    # e5 = (+ e3 e4 i)
    e5 = Expr(call=RefOp(UidOp('+')),
              args=[e3, e4, UidPort("P:sir_i_n_exp.i")])
    sir_i_n_exp = Expression(uid=UidBox("B:sir_i_n_exp"),
                             type=None,
                             name=None,
                             ports=[UidPort("P:sir_i_n_exp.beta"),
                                    UidPort("P:sir_i_n_exp.s"),
                                    UidPort("P:sir_i_n_exp.i"),
                                    UidPort("P:sir_i_n_exp.gamma"),
                                    UidPort("P:sir_i_n_exp.i_n")],
                             tree=e5,
                             metadata=None)

    # Expression sir_r_n_exp
    # e6 = (* gamma i r) -> e6
    e6 = Expr(call=RefOp(UidOp('*')),
              args=[UidPort("P:sir_r_n_exp.gamma"),
                    UidPort("P:sir_r_n_exp.i"),
                    UidPort("P:sir_r_n_exp.r")])
    # e7 = (+ e6 r) -> e7
    e7 = Expr(call=RefOp(UidOp('+')),
              args=[e6, UidPort("P:sir_r_n_exp.r")])
    sir_r_n_exp = Expression(uid=UidBox("B:sir_r_n_exp"),
                             type=None,
                             name=None,
                             ports=[UidPort("P:sir_r_n_exp.gamma"),
                                    UidPort("P:sir_r_n_exp.i"),
                                    UidPort("P:sir_r_n_exp.r"),
                                    UidPort("P:sir_r_n_exp.r_n")],
                             tree=e7,
                             metadata=None)

    # Expression sir_scale_exp
    # e8 = (+ s_n i_n r_n) -> e8
    e8 = Expr(call=RefOp(UidOp('+')),
              args=[UidPort("P:sir_scale_exp.s_n"),
                    UidPort("P:sir_scale_exp.i_n"),
                    UidPort("P:sir_scale_exp.r_n")])
    # e9 = (/ n e8)
    e9 = Expr(call=RefOp(UidOp('/')),
              args=[UidPort("P:sir_scale_exp.n"),
                    e8])
    sir_scale_exp = Expression(uid=UidBox("B:sir_scale_exp"),
                               type=None,
                               name=None,
                               ports=[UidPort("P:sir_scale_exp.n"),
                                      UidPort("P:sir_scale_exp.s_n"),
                                      UidPort("P:sir_scale_exp.i_n"),
                                      UidPort("P:sir_scale_exp.r_n"),
                                      UidPort("P:sir_scale_exp.scale")],
                               tree=e9,
                               metadata=None)

    # Expression sir_s_exp
    # e10 = (* s_n scale) -> e10
    e10 = Expr(call=RefOp(UidOp('*')),
               args=[UidPort("P:sir_s_exp.s_n"),
                     UidPort("P:sir_s_exp.scale")])
    sir_s_exp = Expression(uid=UidBox("B:sir_s_exp"),
                           type=None,
                           name=None,
                           ports=[UidPort("P:sir_s_exp.s_n"),
                                  UidPort("P:sir_s_exp.scale"),
                                  UidPort("P:sir_s_exp.s")],
                           tree=e10,
                           metadata=None)

    # Expression sir_i_exp
    # e11 = (* i_n scale) -> e11
    e11 = Expr(call=RefOp(UidOp('*')),
               args=[UidPort("P:sir_i_exp.i_n"),
                     UidPort("P:sir_i_exp.scale")])
    sir_i_exp = Expression(uid=UidBox("B:sir_i_exp"),
                           type=None,
                           name=None,
                           ports=[UidPort("P:sir_i_exp.i_n"),
                                  UidPort("P:sir_i_exp.scale"),
                                  UidPort("P:sir_i_exp.i")],
                           tree=e11,
                           metadata=None)

    # Expression sir_r_exp
    # e12 = (* r_n scale) -> e12
    e12 = Expr(call=RefOp(UidOp('*')),
               args=[UidPort("P:sir_r_exp.r_n"),
                     UidPort("P:sir_r_exp.scale")])
    sir_r_exp = Expression(uid=UidBox("B:sir_r_exp"),
                           type=None,
                           name=None,
                           ports=[UidPort("P:sir_r_exp.r_n"),
                                  UidPort("P:sir_r_exp.scale"),
                                  UidPort("P:sir_r_exp.r")],
                           tree=e12,
                           metadata=None)

    # Function sir
    sir = Function(uid=UidBox("B:sir"),
                   type=None,
                   name=UidOp("sir"),
                   ports=[UidPort("P:sir.n"),
                          UidPort("P:sir.beta"),
                          UidPort("P:sir.gamma"),
                          UidPort("P:sir.s_in"),
                          UidPort("P:sir.i_in"),
                          UidPort("P:sir.r_in"),
                          UidPort("P:sir.s_out"),
                          UidPort("P:sir.i_out"),
                          UidPort("P:sir.r_out")],

                   # contents
                   wires=[UidWire("W:sir.n>sir_scale_exp.n"),
                          UidWire("W:sir.beta>sir_s_n_exp.beta"),
                          UidWire("W:sir.beta>sir_i_n_exp.beta"),
                          UidWire("W:sir.gamma>sir_i_n_exp.gamma"),
                          UidWire("W:sir.gamma>sir_r_n_exp.gamma"),
                          UidWire("W:sir.s_in>sir_s_n_exp.s"),
                          UidWire("W:sir.s_in>sir_i_n_exp.s"),
                          UidWire("W:sir.i_in>sir_s_n_exp.i"),
                          UidWire("W:sir.i_in>sir_i_n_exp.i"),
                          UidWire("W:sir.i_in>sir_r_n_exp.i"),
                          UidWire("W:sir.r_in>sir_r_n_exp.r"),
                          UidWire("W:sir_s_n_exp.s_n>sir_scale_exp.s_n"),
                          UidWire("W:sir_s_n_exp.s_n>sir_s_exp.s_n"),
                          UidWire("W:sir_i_n_exp.i_n>sir_scale_exp.i_n"),
                          UidWire("W:sir_i_n_exp.i_n>sir_i_exp.i_n"),
                          UidWire("W:sir_r_n_exp.r_n>sir_scale_exp.r_n"),
                          UidWire("W:sir_r_n_exp.r_n>sir_r_exp.r_n"),
                          UidWire("W:sir_scale_exp.scale>sir_s_exp.scale"),
                          UidWire("W:sir_scale_exp.scale>sir_i_exp.scale"),
                          UidWire("W:sir_scale_exp.scale>sir_r_exp.scale"),
                          UidWire("W:sir_s_exp.s>sir.s_out"),
                          UidWire("W:sir_i_exp.i>sir.i_out"),
                          UidWire("W:sir_r_exp.r>sir.r_out")],
                   boxes=[UidBox("B:sir_s_n_exp"),
                          UidBox("B:sir_i_n_exp"),
                          UidBox("B:sir_r_n_exp"),
                          UidBox("B:sir_scale_exp"),
                          UidBox("B:sir_s_exp"),
                          UidBox("B:sir_i_exp"),
                          UidBox("B:sir_r_exp")],
                   junctions=None,

                   metadata=None)

    wires = wires_simsir + wires_simsir_loop_1 + wires_simsir_loop_1_1 + wires_sir

    ports = ports_simsir + ports_simsir_loop_1 + ports_simsir_loop_1_1 + ports_sir

    junctions = junctions_simsir + junctions_simsir_loop_1

    boxes = [simsir,
             simsir_n_exp,
             simsir_loop_1_range_init_exp, simsir_loop_1_get_p_idx_init_exp,

             simsir_loop_1,
             simsir_loop_1_cond, simsir_loop_1_i_exp, simsir_loop_1_get_p_idx_exp,
             simsir_loop_1_n_days_exp, simsir_loop_1_get_beta_exp,
             simsir_loop_1_1_range_init_exp, simsir_loop_1_1_get_d_idx_init_exp,

             simsir_loop_1_1,
             simsir_loop_1_1_cond, simsir_loop_1_1_i_exp, simsir_loop_1_1_get_d_idx_exp,
             simsir_loop_1_1_call_sir_exp,

             sir,
             sir_s_n_exp, sir_i_n_exp, sir_r_n_exp,
             sir_scale_exp,
             sir_s_exp, sir_i_exp, sir_r_exp]

    variables = variables_sir

    _g = Gromet(
        uid=UidGromet("CHIME_SIR_01d"),
        name="CHIME_SIR_01d",
        type=UidType("FunctionNetwork"),
        root=UidBox("B:simsir"),  # TODO Update with latest root
        types=None,
        literals=None,
        junctions=junctions,
        ports=ports,
        wires=wires,
        boxes=boxes,
        variables=variables,
        metadata=[chime_model_description,
                  chime_model_interface
                  ]
    )

    return _g


# -----------------------------------------------------------------------------
# Script
# -----------------------------------------------------------------------------

if __name__ == "__main__":
    gromet_to_json(generate_gromet())
