{
  "containers": [
    {
      "name": "@container::PETPT::@global::petpt",
      "source_refs": [],
      "repeat": false,
      "arguments": [
        "@variable::msalb::-1",
        "@variable::srad::-1",
        "@variable::tmax::-1",
        "@variable::tmin::-1",
        "@variable::xhlai::-1",
        "@variable::eo::-1"
      ],
      "updated": [
        "@variable::eo::5"
      ],
      "return_value": [],
      "body": [
        {
          "function": {
            "name": "PETPT__petpt__assign__td__0",
            "type": "lambda"
          },
          "input": [
            "@variable::tmax::-1",
            "@variable::tmin::-1"
          ],
          "output": [
            "@variable::td::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__condition__IF_0__0",
            "type": "lambda"
          },
          "input": [
            "@variable::xhlai::-1"
          ],
          "output": [
            "@variable::IF_0::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__albedo__0",
            "type": "lambda"
          },
          "input": [
            "@variable::msalb::-1"
          ],
          "output": [
            "@variable::albedo::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__albedo__1",
            "type": "lambda"
          },
          "input": [
            "@variable::msalb::-1",
            "@variable::xhlai::-1"
          ],
          "output": [
            "@variable::albedo::1"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__decision__albedo__2",
            "type": "lambda"
          },
          "input": [
            "@variable::albedo::1",
            "@variable::albedo::0",
            "@variable::IF_0::0"
          ],
          "output": [
            "@variable::albedo::2"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__slang__0",
            "type": "lambda"
          },
          "input": [
            "@variable::srad::-1"
          ],
          "output": [
            "@variable::slang::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__eeq__0",
            "type": "lambda"
          },
          "input": [
            "@variable::slang::0",
            "@variable::albedo::2",
            "@variable::td::0"
          ],
          "output": [
            "@variable::eeq::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__eo__0",
            "type": "lambda"
          },
          "input": [
            "@variable::eeq::0"
          ],
          "output": [
            "@variable::eo::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__condition__IF_1__0",
            "type": "lambda"
          },
          "input": [
            "@variable::tmax::-1"
          ],
          "output": [
            "@variable::IF_1::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__eo__1",
            "type": "lambda"
          },
          "input": [
            "@variable::eeq::0",
            "@variable::tmax::-1"
          ],
          "output": [
            "@variable::eo::1"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__decision__eo__2",
            "type": "lambda"
          },
          "input": [
            "@variable::eo::0",
            "@variable::eo::1",
            "@variable::IF_1::0"
          ],
          "output": [
            "@variable::eo::2"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__condition__IF_1__1",
            "type": "lambda"
          },
          "input": [
            "@variable::tmax::-1"
          ],
          "output": [
            "@variable::IF_1::1"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__eo__3",
            "type": "lambda"
          },
          "input": [
            "@variable::eeq::0",
            "@variable::tmax::-1"
          ],
          "output": [
            "@variable::eo::3"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__decision__eo__4",
            "type": "lambda"
          },
          "input": [
            "@variable::eo::2",
            "@variable::eo::3",
            "@variable::IF_1::1"
          ],
          "output": [
            "@variable::eo::4"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "PETPT__petpt__assign__eo__5",
            "type": "lambda"
          },
          "input": [
            "@variable::eo::4"
          ],
          "output": [
            "@variable::eo::5"
          ],
          "updated": []
        }
      ]
    }
  ],
  "variables": [
    {
      "name": "@variable::PETPT::petpt::msalb::-1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::srad::-1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::tmax::-1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::tmin::-1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::xhlai::-1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::-1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::td::0",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::IF_0::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::albedo::0",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::albedo::1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::albedo::2",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::slang::0",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eeq::0",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::0",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::IF_1::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::1",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::2",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::IF_1::1",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::3",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::4",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    },
    {
      "name": "@variable::PETPT::petpt::eo::5",
      "source_refs": [],
      "domain": {
        "name": "float",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty)))"
    }
  ],
  "start": [
    "@container::PETPT::@global::petpt"
  ],
  "grounding": [],
  "types": [],
  "source": [
    "PETPT.for"
  ],
  "source_comments": {
    "$file_head": [
      "!-----------------------------------------------------------------------\n",
      "!-----------------------------------------------------------------------\n",
      "!     INPUT VARIABLES:\n",
      "!-----------------------------------------------------------------------\n",
      "!     OUTPUT VARIABLES:\n",
      "!-----------------------------------------------------------------------\n",
      "!     LOCAL VARIABLES:\n",
      "!-----------------------------------------------------------------------\n",
      "!     Should use TAVG here -- we have it from WEATHER variable!\n",
      "!     SSJ 9/18/2006\n",
      "!     TD = TAVG\n",
      "!     JWJ 2/15/2007 - Can't use TAVG unless coefficients in EEQ\n",
      "!         equation are recalibrated.  Keep TD calc as it was\n",
      "!         developed.\n",
      "!###  EO = MAX(EO,0.0)   !gives error in DECRAT_C\n",
      "!-----------------------------------------------------------------------\n"
    ],
    "$file_foot": [
      "!-----------------------------------------------------------------------\n",
      "!     PETPT VARIABLES:\n",
      "!-----------------------------------------------------------------------\n",
      "! ALBEDO  Reflectance of soil-crop surface (fraction)\n",
      "! EEQ     Equilibrium evaporation (mm/d)\n",
      "! EO      Potential evapotranspiration rate (mm/d)\n",
      "! MSALB   Soil albedo with mulch and soil water effects (fraction)\n",
      "! SLANG   Solar radiation\n",
      "! SRAD    Solar radiation (MJ/m2-d)\n",
      "! TD      Approximation of average daily temperature (\u00ef\u00bf\u00bdC)\n",
      "! TMAX    Maximum daily temperature (\u00ef\u00bf\u00bdC)\n",
      "! TMIN    Minimum daily temperature (\u00ef\u00bf\u00bdC)\n",
      "! XHLAI   Leaf area index (m2[leaf] / m2[ground])\n",
      "!-----------------------------------------------------------------------\n",
      "!     END SUBROUTINE PETPT\n",
      "C=======================================================================\n"
    ],
    "PETPT": {
      "head": [
        "C=======================================================================\n",
        "C  PETPT, Subroutine, J.T. Ritchie\n",
        "C  Calculates Priestly-Taylor potential evapotranspiration\n",
        "C-----------------------------------------------------------------------\n",
        "C  REVISION HISTORY\n",
        "C  ??/??/19?? JR  Written\n",
        "C  11/04/1993 NBP Modified\n",
        "C  10/17/1997 CHP Updated for modular format.\n",
        "C  09/01/1999 GH  Incorporated into CROPGRO\n",
        "!  07/24/2006 CHP Use MSALB instead of SALB (includes mulch and soil\n",
        "!                 water effects on albedo)\n",
        "!-----------------------------------------------------------------------\n",
        "!  Called by:   WATBAL\n",
        "!  Calls:       None\n",
        "C=======================================================================\n"
      ],
      "neck": [],
      "foot": [
        "!-----------------------------------------------------------------------\n",
        "!     PETPT VARIABLES:\n",
        "!-----------------------------------------------------------------------\n",
        "! ALBEDO  Reflectance of soil-crop surface (fraction)\n",
        "! EEQ     Equilibrium evaporation (mm/d)\n",
        "! EO      Potential evapotranspiration rate (mm/d)\n",
        "! MSALB   Soil albedo with mulch and soil water effects (fraction)\n",
        "! SLANG   Solar radiation\n",
        "! SRAD    Solar radiation (MJ/m2-d)\n",
        "! TD      Approximation of average daily temperature (\u00ef\u00bf\u00bdC)\n",
        "! TMAX    Maximum daily temperature (\u00ef\u00bf\u00bdC)\n",
        "! TMIN    Minimum daily temperature (\u00ef\u00bf\u00bdC)\n",
        "! XHLAI   Leaf area index (m2[leaf] / m2[ground])\n",
        "!-----------------------------------------------------------------------\n",
        "!     END SUBROUTINE PETPT\n",
        "C=======================================================================\n"
      ],
      "internal": {}
    }
  },
  "system": {
    "name": "PETPT",
    "components": [
      {
        "grfn_source": "./PETPT_GrFN.json",
        "code_source": [
          "tests/data/program_analysis/PETPT.for"
        ],
        "imports": []
      }
    ]
  }
}