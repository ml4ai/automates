import subprocess
import os


def run_command(cmd, dirname, log_fn):
    with open(log_fn, 'w') as logfile:
        p = subprocess.Popen(cmd, stdout=logfile, stderr=subprocess.STDOUT, cwd=dirname)
        p.communicate()
        return_code = p.wait()
        return return_code

def load_segments(filename):
    with open(filename) as infile:
        lines = infile.readlines()
        lines = [line.strip() for line in lines]
        return lines

def render_tex(filename, outdir, keep_intermediate):
    """render latex document"""
    dirname = os.path.dirname(filename)
    basename = os.path.basename(filename)
    # we use -halt-on-error so that the latexmk dies if an error is encountered
    # so that we can move on to the next tex file
    command = ['latexmk', '-halt-on-error', '-outdir=' + outdir, '-pdf', basename]
    return_code = run_command(command, dirname, os.path.join(outdir, 'latexmk.logfile'))
    # we can remove the intermediate files generated by latexmk to save storage space
    if not keep_intermediate:
        # use -c to delete intermediate files, not the pdf
        command = ['latexmk', '-c', '-outdir=' + outdir]
        run_command(command, dirname, '/dev/null')
    if return_code == 0:
        pdf_name = os.path.join(outdir, os.path.splitext(basename)[0] + '.pdf')
    else:
        pdf_name = None
    return pdf_name