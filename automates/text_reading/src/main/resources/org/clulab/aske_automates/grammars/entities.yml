vars: org/clulab/aske_automates/grammars/vars.yml

rules:

####IDENTIFIERS####
  - name: identifier-duck-rule
    label: Identifier
    priority: ${priority1}
    type: token
    example: ""
    action: looksLikeAnIdentifier
    pattern: |
      (?<! equation) [mention=Phrase]

#  - name: var-noun_of
#    label: Identifier
#    priority: ${priority1}
#    type: token
#    example: "DSSAT-CSM employs the following formula for calculation of E0 (potential crop ET):"
#    pattern: |
#      (?<=calculation of|value of) (@Phrase [word = /.*/])

  - name: identifier-calculation
    label: Identifier
    priority: ${priority1}
    type: token
    action: looksLikeAnIdentifier
    example: "The ESo calculation in equation 4 is implemented for the CSM-CERESMaize model and several other crop models."
    pattern: |
      (?<variable> [word = /.*/]) (?=calculation)

  - name: identifier_versus
    label: Identifier
    priority: ${priority1}
    type: token
    example: "SKc is a shaping parameter that determines the shape of the Kcd versus LAI curve."
    pattern: |
        @Phrase (?= versus [] /curve|plot/)

  - name: identifier_in_equation
    label: Identifier
    priority: ${priority1}
    type: token
    example: "Note that Kcdmax in equation 5 is different from Kcmax in equation A6."
    pattern: |
      (@Phrase [word = /.*/]) (?= in equation)


  - name: identifier_a_comma
    label: Identifier
    priority: ${priority1}
    type: token
    action: identifierArguments
    example: "while a, aP and b are..."
    pattern: |
      [word="a"] (?= ",")


# temporarily disabled---was capturing a phrase as an identifier
#  - name: identifier_where-dep
#    label: Identifier
#    priority: ${priority1}
#    type: dependency
#    action: identifierArguments
#    example: "where Kcdmin is the minimum crop coefficient or Kcd at LAI = 0, Kcdmax is the maximum crop coefficient at high LAI, and SKc is a shaping parameter that determines the shape of the Kcd versus LAI curve."
#    pattern: |
#      trigger = [lemma = "where"]
#      variable:Phrase+ = </advmod|advcl/+ conj_and? (nsubj|nsubjpass)

  - name: identifier_and
    label: Identifier
    priority: ${priority1}
    type: token
    action: identifierArguments
    example: "E0 is calculated as the product of Kcd and ETpm."
    pattern: |
      (?<=product of|values for) @variable:Phrase and @variable:Phrase

  - name: model
    label: Model
    priority: ${priority1}
    type: token
    example: "DSSAT-CSM employs the following formula for calculation of E0 (potential crop ET):"
    pattern: |
      [word=/^DSSAT|^CSM|^CHIRPS/]

  - name: identifier_greek
    label: Identifier
    priority: ${priority1}
    type: token
    example: "a per-capita rate γ"
    pattern: |
      [entity="B-GreekLetter"]

  - name: end_of_sent_identifier
    label: Identifier
    priority: ${priority1}
    type: token
    example: "a per-capita rate γ"
    pattern: |
      [word=/[A-Za-z]\./ & !word=/al.|i.e|etc.|ETC.|e.g/ & !entity = /PERSON/] (?![word=/^[a-z]/])
      # exclude "al." as in "et al." and i.e as in i.e., <example>

  - name: compound_identifier
    label: Identifier
    priority: ${priority1}
    type: token
    action: looksLikeAnIdentifier
    example: "The density of water (ρw); R(t); IP(0)"
    pattern: |
      [word=/\b[A-Za-z]\b|\b[A-Z][A-Z]\b/] "(" [word=/\b[A-Za-z]\b|[0-9]/ & !entity = /B-unit/] ")" # note: excluded units from identifiers & allowed two capital letters to be in front of the paranthese.
      |
      [entity="B-GreekLetter"] [word=/\w/ & !tag=/^V|MD/]

  - name: compound_identifier_special_chars_expanded
    label: Identifier
    priority: ${priority2}
    type: token
    example: "e°"
    pattern: |
      @Identifier [word=/infinity|degrees/]

  - name: compound_identifier2
    label: Identifier
    priority: ${priority3}
    type: token
    action: looksLikeAnIdentifier
    example: "R(t)"
    pattern: |
      @Identifier "("? @Identifier ")"?

  - name: four_capital_letters
    label: Model
    priority: ${priority1}
    type: token
    example: "DSSAT-CSM employs the following formula for calculation of E0 (potential crop ET):"
    pattern: |
      [word=/[A-Z]{4,}$/ & !entity = /ORGANIZATION/ & !word = "SARS"] ([tag= /CD/]|[word = /[Vv]\d\.\d/])?
      |
      [word=/[A-Z]{4,}\d+/]
      |
      [word=/[A-Z]{4,}$/] [word = "-"] [word=/[A-Z]+/] ([tag= /CD/])?
#      |
#      [word=/[A-Z]{5,}/] [word=/[A-Z][a-z]+/]

  - name: full_name_with_parentheses
    label: Model
    priority: ${priority1}
    type: token
    example: "The Soil and Water Assessment Tool (SWAT) model is a robust watershed modeling tool."
    pattern: |
      [tag = /DT/] ("so" "called")? [word = /[A-Z][a-z]+|and|-/]+ "(" [word=/[A-Z]{3,}$/ & !entity = /ORGANIZATION/ & !word = "SARS"] ")" [word = "model"]?

  - name: simple/standard_model
    label: Model
    priority: ${priority1}
    type: token
    example: "This new model will be called SEIRP model (E stands for the Exposed class while P stands for protection) which can be considered as a variant of the standard SIR."
    pattern: |
      [word = /simple|standard/] [word = /[A-Z]{3,}/]

  # moved below two rules from model.yml file.
  - name: capital_model
    label: Model
    priority: ${priority1}
    type: token
    action: modelArguments
    example: ""
    pattern: |
      [word=/[A-Z]+/] (?=[word=/[Mm]odel$/])

  - name: model_compound
    label: Model
    priority: ${priority1}
    type: dependency
    action: modelArguments
    example: ""
    pattern: |
      trigger = [word = /[Mm]odel$/]
      variable:Phrase = compound | amod

  - name: the/this_model
    label: Model
    priority: ${priority1}
    type: token
    example: ""
    pattern: |
      [tag = /DT/] [tag = /JJ/]? [word=/model$/]

  - name: our_model
    label: Model
    priority: ${priority1}
    type: token
    example: ""
    pattern: |
      [word = /[Oo]ur/] [tag = /JJ/]? [word=/model$/]

#  - name: var_greek_and_latin
#    label: Identifier
#    priority: ${priority1}
#    type: token
#    action: looksLikeAIdentifier
#    example: "The density of water (ρw) is taken as 1.0 Mg m-3."
#    pattern: |
#      [chunk = /B-NP|I-NP/ & !word = /\(|\)|,|=|\[|\]/]? [entity="B-GreekLetter"] [chunk = "I-NP"]?
#
