taxonomy: org/clulab/aske_automates/grammars/entities/grammar/taxonomy.yml

rules:

  - name: "coordinations"
    label: Avoid
    priority: 1
    type: token
    pattern: |
      # avoid coordinations
      # we want any coordinated entities we might encounter to be split
      [tag=CC]

##   the chunker is wont to gobble up verbs with clear arguments as part of NPs, hence this rule
#  - name: "verbs-with-args"
#    label: Avoid
#    priority: 1
#    example: "X HINDERS Y."
#    type: token
#    pattern: |
#      # avoid verbs with arguments
#      [tag = /^V/ & outgoing=/^nsubj/  & !tag = 'VBN']

  - name: "references-et-al"
    label: Avoid
    priority: 3
    type: token
    pattern: |
      # avoid xrefs
      [tag=/NNP|FW/] (?="et" "al") | [tag=/NNP|FW/] (?="et" "al.")

  - name: "et-al"
    label: Avoid
    priority: 3
    type: token
    pattern: |
      # avoid xrefs
      "et" "al" | "et" "al."

  - name: "references-name-year"
    label: Avoid
    priority: 3
    type: token
    pattern: |
      # avoid xrefs
      [tag=/NNP|FW/] (?= "," [tag=CD])


  - name: "equal_sign"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      #avoids equal signs
      [word=/=|>|</]

  - name: "figure-equation-ref"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      #avoids pointers to equations/figures as those are frequently found as identifiers
      #might need to be revisited
      [word=/(?i)\b(figs?|eqs?|tables?)\b/] [word="."]?

  # todo: verify that this prevents double finding when the StringMatchEF is used
  # todo: verify there are no expansion ramifications due to Avoid label
  - name: "prev_found_identifier"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      #avoids previously found Variables
      [mention=Identifier]

  - name: "YEAR"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [entity="DATE"]

  - name: "ie"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [word="i.e"] | [word="i.e."]

  - name: "proper_noun" #eliminating a stand-alone 'person' doesn't work bc Kcbmin is found as PERSON
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [entity=/PERSON|ORGANIZATION/]{2,4} #note: adjusted {2,3} -> {2,4} to account for more cases. Can we adjust the number to {3,4}? (i.e. Mainland China, Hong Kong not captured as a phrase due to this rule)
      |
      [chunk = /B-NP/ & entity= /PERSON/] [chunk = /I-NP/ & word = /[A-Z]/]{1,2}

  - name: "person_2authors"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [entity="PERSON"] [word="and"] [entity="PERSON"]
      |
      [word = /[A-Z][a-z]+-?[a-z]*/ & tag = /^NN/] [word = ","] [word = /[A-Z][a-z]+-?[a-z]*/ & tag = /^NN/] [word = ","] [word = "et"] [word = "al."]
      
  - name: "person_titles"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [word = /\b(Ms|Mrs?)\b/] (?=[entity="PERSON"])
      

  - name: "determiners"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [lemma = /\b(this|the)\b/]

  - name: "eg"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [lemma = "e.g"]

  - name: "etc"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [word = /\b(etc|ETC|etc\.|ETC\.)\b|et cetera/]

  - name: "email"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [lemma = /.*@.*\..*/]

  - name: "pages"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [word = "pp"] (?<=[tag=/CD|:|./]+)

  - name: "paren_plural"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      [tag = "NN"] "(" [word = "s" & tag = "NNS"] ")"

  - name: "states"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      (?<= [entity="LOCATION"]) [word=","] [word=/[A-Z]/]

  - name: "for_this_research"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      (?<= [word="For"] [word="this"]) [word="research"]

  - name: "apostrophe_s"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      (?<= [word="'"]) [word="s"]

  - name: "in addition"
    label: Avoid
    priority: 2
    type: token
    pattern: |
      (?<= [lemma="in"]) [word="addition"]