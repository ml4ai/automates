{
  "variables": [
    {
      "name": "@variable::select02::main.loop$0.IF_0::COND_0_0::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::y::0",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::COND_0_1::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::y::1",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::COND_0_2::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::y::2",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::COND_0_3::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::y::3",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::inc::-1",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0.IF_0::y::4",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0::y::0",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main::y::0",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0::inc::0",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0::IF_0::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0::EXIT::0",
      "source_refs": [],
      "domain": {
        "name": "boolean",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    },
    {
      "name": "@variable::select02::main.loop$0::inc::1",
      "source_refs": [],
      "domain": {
        "name": "integer",
        "type": "type",
        "mutable": false
      },
      "domain_constraint": "(and (> v -infty) (< v infty))"
    }
  ],
  "start": [
    "@container::select02::@global::main"
  ],
  "containers": [
    {
      "name": "@container::select02::@global::main",
      "source_refs": [],
      "type": "function",
      "arguments": [],
      "updated": [],
      "return_value": [],
      "body": [
        {
          "function": {
            "name": "@container::select02::main::loop$0",
            "type": "container"
          },
          "input": [],
          "output": [],
          "updated": [
            "@variable::y::0"
          ]
        }
      ]
    },
    {
      "name": "@container::select02::main::loop$0",
      "source_refs": [],
      "type": "loop",
      "arguments": [],
      "updated": [
        "@variable::y::0"
      ],
      "return_value": [],
      "body": [
        {
          "function": {
            "name": "select02__main__loop_0__assign__inc__0",
            "type": "lambda",
            "code": "lambda :1"
          },
          "input": [],
          "output": [
            "@variable::inc::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__condition__IF_0__0",
            "type": "lambda",
            "code": "lambda inc:0 <= inc < 11"
          },
          "input": [
            "@variable::inc::0"
          ],
          "output": [
            "@variable::IF_0::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__decision__EXIT__0",
            "type": "lambda",
            "code": "lambda IF_0_0:(not IF_0_0)"
          },
          "input": [
            "@variable::IF_0::0"
          ],
          "output": [
            "@variable::EXIT::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "@container::select02::main.loop$0::IF_0",
            "type": "container"
          },
          "input": [
            "@variable::inc::0"
          ],
          "updated": [
            "@variable::y::0"
          ],
          "output": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__assign__inc__1",
            "type": "lambda",
            "code": "lambda inc:inc + 1"
          },
          "input": [
            "@variable::inc::0"
          ],
          "output": [
            "@variable::inc::1"
          ],
          "updated": []
        }
      ]
    },
    {
      "name": "@container::select02::main.loop$0::IF_0",
      "source_refs": [],
      "type": "select-block",
      "arguments": [
        "@variable::inc::-1"
      ],
      "updated": [
        "@variable::y::4"
      ],
      "return_value": [],
      "body": [
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__condition__COND_0_0__0",
            "type": "lambda",
            "code": "lambda inc:((inc >= \"-inf\") and (inc <= 3))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::COND_0_0::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__assign__y__0",
            "type": "lambda",
            "code": "lambda inc:int((inc*2))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::y::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__condition__COND_0_1__0",
            "type": "lambda",
            "code": "lambda inc:((inc >= 9) and (inc <= \"inf\"))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::COND_0_1::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__assign__y__1",
            "type": "lambda",
            "code": "lambda inc:int((inc*3))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::y::1"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__condition__COND_0_2__0",
            "type": "lambda",
            "code": "lambda inc:(inc == 8)"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::COND_0_2::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__assign__y__2",
            "type": "lambda",
            "code": "lambda inc:int((inc*4))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::y::2"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__condition__COND_0_3__0",
            "type": "lambda",
            "code": "lambda inc:((inc >= 4) and (inc <= 7))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::COND_0_3::0"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__assign__y__3",
            "type": "lambda",
            "code": "lambda inc:int((inc*5))"
          },
          "input": [
            "@variable::inc::-1"
          ],
          "output": [
            "@variable::y::3"
          ],
          "updated": []
        },
        {
          "function": {
            "name": "select02__main__loop_0__IF_0__decision__y__4",
            "type": "lambda",
            "code": "lambda COND_0,COND_1,COND_2,COND_3,y_0,y_1,y_2,y_3:np.select([COND_0,COND_1,COND_2,COND_3],[y_0,y_1,y_2,y_3],default=0)"
          },
          "input": [
            "@variable::COND_0_0::0",
            "@variable::COND_0_1::0",
            "@variable::COND_0_2::0",
            "@variable::COND_0_3::0",
            "@variable::y::0",
            "@variable::y::1",
            "@variable::y::2",
            "@variable::y::3"
          ],
          "output": [
            "@variable::y::4"
          ],
          "updated": []
        }
      ]
    }
  ],
  "grounding": [],
  "types": [],
  "source": [
    "select02.f"
  ],
  "source_comments": {
    "$file_head": [
      "C FORTRAN test file to test CASE constructs\n",
      "C This file tests an integer with various types of comparisons\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n"
    ],
    "$file_foot": []
  },
  "system": {
    "name": "select02",
    "components": [
      {
        "grfn_source": "./select02_AIR.json",
        "code_source": [
          "tests/data/program_analysis/select_case/select02.f"
        ],
        "imports": []
      }
    ]
  }
}
